// Need to use the React-specific entry point to import `createApi`
import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";
import { API_BASE_URL, STUDENT_API_ENDPOINT } from "../../utils/shared/const";

interface Student {
    id?: number;
    name: string;
    dob: string;
    address: string;
    class: string;
    createdAt?: string;
    updatedAt?: string;
}

interface StudentResponse {
    students: Student[];
    totalStudent: number;
}

interface Pagination {
    pageNum: number;
    pageSize: number;
}

export const studentApiSlice = createApi({
    reducerPath: 'studentApi',
    baseQuery: fetchBaseQuery({ baseUrl: API_BASE_URL }),
    endpoints: (builder) => ({
        getAllStudents: builder.query<StudentResponse, Pagination>({
            query: (paging) => ({
                url: '/Student/GetAll',
                method: 'POST',
                body: paging,
            })
        }),
        getStudentById: builder.query<Student, number>({
            query: (id) => `/Student/Get?studentID=${id}`,
        }),
        addStudent: builder.mutation<Student, Student>({
            query: (newStudent) => ({
                url: '/Student/Create',
                method: 'POST',
                body: newStudent,
            }),
        }),
        updateStudent: builder.mutation<Student, Student>({
            query: (updatedStudent) => ({
                url: `/Student/Update`,
                method: 'PUT',
                body: updatedStudent,
            }),
        }),
        deleteStudent: builder.mutation<void, number>({
            query: (id) => ({
                url: `/Student/Delete/${id}`,
                method: 'DELETE',
            }),
        }),
    }),
});


// Hooks are auto-generated by RTK-Query
// Same as `quotesApiSlice.endpoints.getQuotes.useQuery`
export const {
    useGetAllStudentsQuery,
    useGetStudentByIdQuery,
    useAddStudentMutation,
    useUpdateStudentMutation,
    useDeleteStudentMutation
} = studentApiSlice;


